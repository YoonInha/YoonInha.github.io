{"componentChunkName":"component---src-templates-docs-js","path":"/codeblock4","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"54b7f6e1-6c2e-5287-a62b-3ffe4353906a","title":"기타 (guitar)","slug":"/codeblock4"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"기타 (guitar)\",\n  \"metaTitle\": \"기타 (guitar)\",\n  \"metaDescription\": \"기타(guitar)\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following is a code block with JavaScript language syntax highlighting.\"), mdx(\"p\", null, \"Supports multiple languages.\"), mdx(\"p\", null, \"The following is a code block with diff. Lines with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"+\"), \" highlighted in green shade indicating an addition. Lines with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-\"), \" highlighted in red shade indicating a deletion.\"), mdx(\"h2\", null, \"Live Editing example\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#live-editing-example","title":"Live Editing example"}]},"parent":{"__typename":"File","relativePath":"codeblock4.md"},"frontmatter":{"metaTitle":"기타 (guitar)","metaDescription":"기타(guitar)"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/codeblock3/3-index","title":"Sub Page2"}}},{"node":{"fields":{"slug":"/codeblock2/1-index","title":"Sub Page"}}},{"node":{"fields":{"slug":"/codeblock3/2-index","title":"Sub Page3"}}},{"node":{"fields":{"slug":"/codeblock2","title":"Python"}}},{"node":{"fields":{"slug":"/codeblock3/1-index","title":"Sub Page"}}},{"node":{"fields":{"slug":"/codeblock3","title":"피아노 & 화성학"}}},{"node":{"fields":{"slug":"/introduction","title":"소개"}}},{"node":{"fields":{"slug":"/codeblock/1-index","title":"사용 환경 및 설정"}}},{"node":{"fields":{"slug":"/codeblock4/2-index","title":"Sub Page3"}}},{"node":{"fields":{"slug":"/codeblock4/3-index","title":"Sub Page2"}}},{"node":{"fields":{"slug":"/codeblock4/1-index","title":"Sub Page"}}},{"node":{"fields":{"slug":"/codeblock","title":"Deep Learning"}}},{"node":{"fields":{"slug":"/codeblock4","title":"기타 (guitar)"}}}]}},"pageContext":{"id":"54b7f6e1-6c2e-5287-a62b-3ffe4353906a"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}